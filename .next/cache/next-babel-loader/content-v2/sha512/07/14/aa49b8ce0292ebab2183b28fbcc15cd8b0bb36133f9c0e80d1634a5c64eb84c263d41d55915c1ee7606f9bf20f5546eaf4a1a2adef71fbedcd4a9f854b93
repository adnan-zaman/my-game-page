{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adnan\\\\web-dev\\\\my-game-page\\\\pages\\\\userPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Game from \"../components/Game\";\nexport var __N_SSP = true;\nexport default function UserPage(props) {\n  _s();\n\n  var _this = this;\n\n  //setting state\n  var _useState = useState(props.games),\n      favoriteGames = _useState[0],\n      setFavoriteGames = _useState[1];\n\n  var _useState2 = useState(favoriteGames),\n      currFavoriteGames = _useState2[0],\n      setCurrFavoriteGames = _useState2[1];\n\n  var _useState3 = useState(false),\n      isEditing = _useState3[0],\n      setIsEditing = _useState3[1];\n\n  var favoriteGamesList = favoriteGames.map(function (game) {\n    return /*#__PURE__*/_jsxDEV(Game, {\n      gameId: game.id,\n      gameName: game.name,\n      gameCoverUrl: game.coverurl,\n      isEditing: isEditing\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, _this);\n  });\n\n  function swap() {\n    console.log(\"swap \".concat(isEditing));\n    setIsEditing(!isEditing);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: favoriteGamesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: swap,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserPage, \"Fa1uapSZAm248/2C+8qSJhU1pm0=\");\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/pages/userPage.js"],"names":["useState","useRef","Game","UserPage","props","games","favoriteGames","setFavoriteGames","currFavoriteGames","setCurrFavoriteGames","isEditing","setIsEditing","favoriteGamesList","map","game","id","name","coverurl","swap","console","log","displayName"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AACtC;AADsC,kBAEIJ,QAAQ,CAACI,KAAK,CAACC,KAAP,CAFZ;AAAA,MAE/BC,aAF+B;AAAA,MAEhBC,gBAFgB;;AAAA,mBAGYP,QAAQ,CAACM,aAAD,CAHpB;AAAA,MAG/BE,iBAH+B;AAAA,MAGZC,oBAHY;;AAAA,mBAIJT,QAAQ,CAAC,KAAD,CAJJ;AAAA,MAI/BU,SAJ+B;AAAA,MAIpBC,YAJoB;;AAMtC,MAAMC,iBAAiB,GAAGN,aAAa,CAACO,GAAd,CAAkB,UAACC,IAAD;AAAA,wBAC1C,QAAC,IAAD;AAEE,MAAA,MAAM,EAAEA,IAAI,CAACC,EAFf;AAGE,MAAA,QAAQ,EAAED,IAAI,CAACE,IAHjB;AAIE,MAAA,YAAY,EAAEF,IAAI,CAACG,QAJrB;AAKE,MAAA,SAAS,EAAEP;AALb,OACOI,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,aAD0C;AAAA,GAAlB,CAA1B;;AAUA,WAASG,IAAT,GAAgB;AACdC,IAAAA,OAAO,CAACC,GAAR,gBAAoBV,SAApB;AACAC,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AACD,sBACE;AAAA,4BACE;AAAA,gBAAKN,KAAK,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GA3BuBf,Q;;KAAAA,Q","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport Game from \"../components/Game\";\r\n\r\nexport default function UserPage(props) {\r\n  //setting state\r\n  const [favoriteGames, setFavoriteGames] = useState(props.games);\r\n  const [currFavoriteGames, setCurrFavoriteGames] = useState(favoriteGames);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const favoriteGamesList = favoriteGames.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      gameId={game.id}\r\n      gameName={game.name}\r\n      gameCoverUrl={game.coverurl}\r\n      isEditing={isEditing}\r\n    />\r\n  ));\r\n\r\n  function swap() {\r\n    console.log(`swap ${isEditing}`);\r\n    setIsEditing(!isEditing);\r\n  }\r\n  return (\r\n    <>\r\n      <h1>{props.displayName}</h1>\r\n      <div>{favoriteGamesList}</div>\r\n      <button onClick={swap}>Edit</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getServerSideProps(context) {\r\n  return {\r\n    props: JSON.parse(JSON.stringify(context.res.locals)),\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}