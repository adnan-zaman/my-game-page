{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adnan\\\\web-dev\\\\my-game-page\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport default function Form(props) {\n  _s();\n\n  var _useState = useState(React.Children.map(props.children, function (child) {\n    return child.props.value;\n  })),\n      fieldValues = _useState[0],\n      setFieldValues = _useState[1];\n\n  var children = React.Children.map(props.children, function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      value: fieldValues[index],\n      index: index\n    });\n  });\n\n  function handleSubmit(e) {}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n/*\r\n\r\nform is responsible for\r\n-validating all its children\r\n-sending response of validation to parent\r\n-keeping state of children\r\n*/\n\n/*\r\nFormField\r\n should be used as children to a Form\r\n    -value= starting value, after that, form takes over\r\n\r\n\r\n*/\n\n_s(Form, \"DiQsf49EaXWbC6rlADoBzBIRA6c=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/Form.js"],"names":["React","useState","Form","props","Children","map","children","child","value","fieldValues","setFieldValues","index","cloneElement","handleSubmit","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,kBACIF,QAAQ,CAC5CD,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBF,KAAK,CAACG,QAAzB,EAAmC,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACJ,KAAN,CAAYK,KAAvB;AAAA,GAAnC,CAD4C,CADZ;AAAA,MAC3BC,WAD2B;AAAA,MACdC,cADc;;AAKlC,MAAMJ,QAAQ,GAAGN,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBF,KAAK,CAACG,QAAzB,EAAmC,UAACC,KAAD,EAAQI,KAAR;AAAA,wBAClDX,KAAK,CAACY,YAAN,CAAmBL,KAAnB,EAA0B;AAAEC,MAAAA,KAAK,EAAEC,WAAW,CAACE,KAAD,CAApB;AAA6BA,MAAAA,KAAK,EAALA;AAA7B,KAA1B,CADkD;AAAA,GAAnC,CAAjB;;AAGA,WAASE,YAAT,CAAsBC,CAAtB,EAAyB,CAAE;;AAC3B,sBAAO;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA,cAA+BP;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1BwBJ,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n  const [fieldValues, setFieldValues] = useState(\r\n    React.Children.map(props.children, (child) => child.props.value)\r\n  );\r\n\r\n  const children = React.Children.map(props.children, (child, index) =>\r\n    React.cloneElement(child, { value: fieldValues[index], index })\r\n  );\r\n  function handleSubmit(e) {}\r\n  return <form onSubmit={handleSubmit}>{children}</form>;\r\n}\r\n\r\n/*\r\n\r\nform is responsible for\r\n-validating all its children\r\n-sending response of validation to parent\r\n-keeping state of children\r\n*/\r\n\r\n/*\r\nFormField\r\n should be used as children to a Form\r\n    -value= starting value, after that, form takes over\r\n\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}