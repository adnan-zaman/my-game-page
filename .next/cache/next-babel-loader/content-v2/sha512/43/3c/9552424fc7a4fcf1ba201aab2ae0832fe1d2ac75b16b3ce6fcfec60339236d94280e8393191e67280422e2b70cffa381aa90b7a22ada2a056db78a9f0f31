{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useRef } from \"react\";\nimport Game from \"../components/Game\";\nimport GameSearchBox from \"../components/GameSearchBox\";\nimport Toolbar from \"../components/Toolbar\";\n/**\r\n *\r\n * The page that is displayed when\r\n * viewing a user's profile\r\n *\r\n * @param {object} props\r\n */\n\nexport var __N_SSP = true;\nexport default function UserPage(props) {\n  _s2();\n\n  /* setting state */\n  //the user's actual favorite games\n  var _useState = useState(props.games),\n      _useState2 = _slicedToArray(_useState, 2),\n      favoriteGames = _useState2[0],\n      setFavoriteGames = _useState2[1]; //the user's favorite game as currently displayed. these may differ\n  //from actual favorite games during editing\n\n\n  var _useState3 = useState(favoriteGames),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayedFavoriteGames = _useState4[0],\n      setDisplayedFavoriteGames = _useState4[1]; //whether or not user is editing favorite games\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEditing = _useState6[0],\n      setIsEditing = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n  /**\r\n   * Called when a Game is dragged. Adds\r\n   * the Game's data-index attribute to\r\n   * DragEvent.dataTransfer to be used by\r\n   * dropGame() later on\r\n   *\r\n   * @param {DragEvent} e\r\n   */\n\n\n  function startDragGame(e) {\n    e.stopPropagation();\n    console.log(\"startDrag target \".concat(e.target));\n    e.dataTransfer.setData(\"text/plain\", e.target.dataset.index);\n  } //dragover handler is needed to make element\n  //draggable\n\n\n  function dragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n  /**\r\n   * The dragged game will be swapped with the game\r\n   * it's dropped on.\r\n   *\r\n   * @param {DragEvent} e\r\n   */\n\n\n  function dropGameOnGame(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"dropOnGame target \".concat(e.target));\n\n    var newFaveGames = _toConsumableArray(displayedFavoriteGames);\n\n    var newGame = e.dataTransfer.getData(\"application/json\"); //index of game that was dropped on\n\n    var dropTarget = Number(e.target.dataset.index); //dataTransfer will contain a js object if the game being dragged\n    //is from search results, meaning a new game is being added\n    //to favorite games\n\n    if (newGame) {\n      var newGameAsObject = JSON.parse(newGame); //we replace elements as we go, eventually we an element to newFaveGames[newFaveGames.length]\n      //this increases the length and the loop goes on forever\n      //so we keep the length of the list before we start\n\n      var length = newFaveGames.length; //game to be added in\n\n      var holder = newGameAsObject;\n\n      for (var i = 0; i <= length; i++) {\n        if (newFaveGames[i] && newFaveGames[i].id === newGameAsObject.id) return; //start swapping from dropTarget onwards\n\n        if (i >= dropTarget) {\n          //put holder into the list, take what was there and put into holder\n          var temp = newFaveGames[i];\n          newFaveGames[i] = holder;\n          holder = temp;\n        }\n      }\n    } //if there is no js object, then the game being dragged is an already\n    //existing game so we just swap places\n    else {\n        //the game that was being dragged\n        var draggedGame = Number(e.dataTransfer.getData(\"text/plain\"));\n        var _temp = newFaveGames[dropTarget];\n        newFaveGames[dropTarget] = newFaveGames[draggedGame];\n        newFaveGames[draggedGame] = _temp;\n      }\n\n    setDisplayedFavoriteGames(newFaveGames);\n  }\n  /**\r\n   * The dragged game will be added to the\r\n   * end of the list\r\n   *\r\n   * @param {DragEvent} e\r\n   */\n\n\n  function dropGameOnContainer(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    var newFaveGames = _toConsumableArray(displayedFavoriteGames);\n\n    var newGame = e.dataTransfer.getData(\"application/json\"); //dataTransfer will contain a js object if the game being dragged\n    //is from search results, meaning a new game is being added\n    //to favorite games\n\n    if (newGame) {\n      newFaveGames.push(JSON.parse(newGame));\n    } //if there is no js object, then the game being dragged is an already\n    //existing game. dragged game is added to the end and rest are shifted up\n    else {\n        var newPos = Number(e.dataTransfer.getData(\"text/plain\"));\n        var draggedGame = newFaveGames[newPos]; //shift everything towards the front\n\n        for (; newPos < newFaveGames.length - 1; newPos++) {\n          newFaveGames[newPos] = newFaveGames[newPos + 1];\n        } //add draggedGame back to the end\n\n\n        newFaveGames[newPos] = draggedGame;\n        console.log(newFaveGames);\n      }\n\n    setDisplayedFavoriteGames(newFaveGames);\n  }\n  /**\r\n   * Deletes a game from displayedFavoriteGames.\r\n   *\r\n   * @param {number} gameId the id of game to be deleted\r\n   */\n\n\n  function deleteGame(gameId) {\n    setDisplayedFavoriteGames(displayedFavoriteGames.filter(function (game) {\n      return game.id !== gameId;\n    }));\n  }\n  /**\r\n   * Called when editing is cancelled. Sets displayed favorite games\r\n   * to actual favorite games.\r\n   */\n\n\n  function rollbackChanges() {\n    setErrorMessage(\"\");\n    setDisplayedFavoriteGames(favoriteGames);\n    setIsEditing(false);\n  }\n\n  function saveChanges() {\n    return _saveChanges.apply(this, arguments);\n  } //get a list of Game components corresponding to favorite games\n  //each is given a data-index attribute that corresponds to\n  //what position in the list they are. this will be used during\n  //editing favorite games.\n\n\n  function _saveChanges() {\n    _saveChanges = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var faveGameIds, response, error;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setErrorMessage(\"\");\n              faveGameIds = displayedFavoriteGames.map(function (game) {\n                return game.id;\n              });\n              _context.next = 4;\n              return fetch(\"http://localhost:3000/api/favorites/\".concat(props.id), {\n                method: \"PUT\",\n                credentials: \"same-origin\",\n                body: JSON.stringify(faveGameIds),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              setIsEditing(false);\n              setFavoriteGames(displayedFavoriteGames);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return response.json();\n\n            case 12:\n              error = _context.sent;\n              setErrorMessage(error.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _saveChanges.apply(this, arguments);\n  }\n\n  var favoriteGamesList = displayedFavoriteGames.map(function (game, index) {\n    return /*#__PURE__*/React.createElement(Game, {\n      key: game.id,\n      gameId: game.id,\n      gameName: game.name,\n      gameCoverUrl: game.coverurl,\n      isEditing: isEditing,\n      \"data-index\": \"\" + index,\n      draggable: isEditing + \"\",\n      onDragStart: isEditing ? startDragGame : undefined,\n      onDragOver: isEditing ? dragOver : undefined,\n      onDrop: isEditing ? dropGameOnGame : undefined,\n      onDelete: deleteGame\n    });\n  });\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, {\n    userId: props.id,\n    profilePic: props.profilePic\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page-header mb-3\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.profilePic,\n    alt: \"\".concat(props.displayName, \"'s profile picture\"),\n    className: \"page-profile-pic rounded-circle\"\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-1 d-inline\"\n  }, props.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page-main \".concat(isEditing && \"d-flex\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page-games rounded-lg d-flex flex-column \".concat(isEditing ? \"is-editing\" : \"m-auto\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-games-list game-list\",\n    onDrop: dropGameOnContainer,\n    onDragOver: isEditing ? dragOver : undefined\n  }, favoriteGamesList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-bar\"\n  }, props.id && (!isEditing ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsEditing(true);\n    },\n    className: \"btn btn-secondary\"\n  }, \"Edit\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: rollbackChanges,\n    className: \"btn btn-secondary\"\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveChanges,\n    className: \"btn btn-primary\"\n  }, \"Save\"))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"danger-text\"\n  }, errorMessage))), isEditing && /*#__PURE__*/React.createElement(GameSearchBox, null)));\n}\n\n_s2(UserPage, \"22CiGVluGG7G1b0clOaHSp1dmwc=\");\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/pages/userPage.js"],"names":["React","useState","useRef","Game","GameSearchBox","Toolbar","UserPage","props","games","favoriteGames","setFavoriteGames","displayedFavoriteGames","setDisplayedFavoriteGames","isEditing","setIsEditing","errorMessage","setErrorMessage","startDragGame","e","stopPropagation","console","log","target","dataTransfer","setData","dataset","index","dragOver","preventDefault","dropEffect","dropGameOnGame","newFaveGames","newGame","getData","dropTarget","Number","newGameAsObject","JSON","parse","length","holder","i","id","temp","draggedGame","dropGameOnContainer","push","newPos","deleteGame","gameId","filter","game","rollbackChanges","saveChanges","faveGameIds","map","fetch","method","credentials","body","stringify","headers","response","ok","json","error","message","favoriteGamesList","name","coverurl","undefined","profilePic","displayName"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Game from \"../components/Game\";\r\nimport GameSearchBox from \"../components/GameSearchBox\";\r\n\r\nimport Toolbar from \"../components/Toolbar\";\r\n\r\n/**\r\n *\r\n * The page that is displayed when\r\n * viewing a user's profile\r\n *\r\n * @param {object} props\r\n */\r\n\r\nexport default function UserPage(props) {\r\n  /* setting state */\r\n  //the user's actual favorite games\r\n  const [favoriteGames, setFavoriteGames] = useState(props.games);\r\n  //the user's favorite game as currently displayed. these may differ\r\n  //from actual favorite games during editing\r\n  const [displayedFavoriteGames, setDisplayedFavoriteGames] = useState(\r\n    favoriteGames\r\n  );\r\n  //whether or not user is editing favorite games\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  /**\r\n   * Called when a Game is dragged. Adds\r\n   * the Game's data-index attribute to\r\n   * DragEvent.dataTransfer to be used by\r\n   * dropGame() later on\r\n   *\r\n   * @param {DragEvent} e\r\n   */\r\n  function startDragGame(e) {\r\n    e.stopPropagation();\r\n    console.log(`startDrag target ${e.target}`);\r\n    e.dataTransfer.setData(\"text/plain\", e.target.dataset.index);\r\n  }\r\n\r\n  //dragover handler is needed to make element\r\n  //draggable\r\n  function dragOver(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n  }\r\n\r\n  /**\r\n   * The dragged game will be swapped with the game\r\n   * it's dropped on.\r\n   *\r\n   * @param {DragEvent} e\r\n   */\r\n  function dropGameOnGame(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(`dropOnGame target ${e.target}`);\r\n    const newFaveGames = [...displayedFavoriteGames];\r\n    const newGame = e.dataTransfer.getData(\"application/json\");\r\n    //index of game that was dropped on\r\n    const dropTarget = Number(e.target.dataset.index);\r\n    //dataTransfer will contain a js object if the game being dragged\r\n    //is from search results, meaning a new game is being added\r\n    //to favorite games\r\n    if (newGame) {\r\n      const newGameAsObject = JSON.parse(newGame);\r\n      //we replace elements as we go, eventually we an element to newFaveGames[newFaveGames.length]\r\n      //this increases the length and the loop goes on forever\r\n      //so we keep the length of the list before we start\r\n      const length = newFaveGames.length;\r\n      //game to be added in\r\n      let holder = newGameAsObject;\r\n      for (let i = 0; i <= length; i++) {\r\n        if (newFaveGames[i] && newFaveGames[i].id === newGameAsObject.id)\r\n          return;\r\n        //start swapping from dropTarget onwards\r\n        if (i >= dropTarget) {\r\n          //put holder into the list, take what was there and put into holder\r\n          const temp = newFaveGames[i];\r\n          newFaveGames[i] = holder;\r\n          holder = temp;\r\n        }\r\n      }\r\n    }\r\n    //if there is no js object, then the game being dragged is an already\r\n    //existing game so we just swap places\r\n    else {\r\n      //the game that was being dragged\r\n      const draggedGame = Number(e.dataTransfer.getData(\"text/plain\"));\r\n      const temp = newFaveGames[dropTarget];\r\n      newFaveGames[dropTarget] = newFaveGames[draggedGame];\r\n      newFaveGames[draggedGame] = temp;\r\n    }\r\n\r\n    setDisplayedFavoriteGames(newFaveGames);\r\n  }\r\n\r\n  /**\r\n   * The dragged game will be added to the\r\n   * end of the list\r\n   *\r\n   * @param {DragEvent} e\r\n   */\r\n  function dropGameOnContainer(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const newFaveGames = [...displayedFavoriteGames];\r\n    const newGame = e.dataTransfer.getData(\"application/json\");\r\n    //dataTransfer will contain a js object if the game being dragged\r\n    //is from search results, meaning a new game is being added\r\n    //to favorite games\r\n    if (newGame) {\r\n      newFaveGames.push(JSON.parse(newGame));\r\n    }\r\n    //if there is no js object, then the game being dragged is an already\r\n    //existing game. dragged game is added to the end and rest are shifted up\r\n    else {\r\n      let newPos = Number(e.dataTransfer.getData(\"text/plain\"));\r\n      let draggedGame = newFaveGames[newPos];\r\n      //shift everything towards the front\r\n      for (; newPos < newFaveGames.length - 1; newPos++)\r\n        newFaveGames[newPos] = newFaveGames[newPos + 1];\r\n\r\n      //add draggedGame back to the end\r\n      newFaveGames[newPos] = draggedGame;\r\n      console.log(newFaveGames);\r\n    }\r\n\r\n    setDisplayedFavoriteGames(newFaveGames);\r\n  }\r\n\r\n  /**\r\n   * Deletes a game from displayedFavoriteGames.\r\n   *\r\n   * @param {number} gameId the id of game to be deleted\r\n   */\r\n  function deleteGame(gameId) {\r\n    setDisplayedFavoriteGames(\r\n      displayedFavoriteGames.filter((game) => game.id !== gameId)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Called when editing is cancelled. Sets displayed favorite games\r\n   * to actual favorite games.\r\n   */\r\n  function rollbackChanges() {\r\n    setErrorMessage(\"\");\r\n    setDisplayedFavoriteGames(favoriteGames);\r\n    setIsEditing(false);\r\n  }\r\n\r\n  async function saveChanges() {\r\n    setErrorMessage(\"\");\r\n    const faveGameIds = displayedFavoriteGames.map((game) => game.id);\r\n\r\n    const response = await fetch(\r\n      `http://localhost:3000/api/favorites/${props.id}`,\r\n      {\r\n        method: \"PUT\",\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(faveGameIds),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      setIsEditing(false);\r\n      setFavoriteGames(displayedFavoriteGames);\r\n    } else {\r\n      const error = await response.json();\r\n      setErrorMessage(error.message);\r\n    }\r\n  }\r\n\r\n  //get a list of Game components corresponding to favorite games\r\n  //each is given a data-index attribute that corresponds to\r\n  //what position in the list they are. this will be used during\r\n  //editing favorite games.\r\n  const favoriteGamesList = displayedFavoriteGames.map((game, index) => (\r\n    <Game\r\n      key={game.id}\r\n      gameId={game.id}\r\n      gameName={game.name}\r\n      gameCoverUrl={game.coverurl}\r\n      isEditing={isEditing}\r\n      data-index={\"\" + index}\r\n      draggable={isEditing + \"\"}\r\n      onDragStart={isEditing ? startDragGame : undefined}\r\n      onDragOver={isEditing ? dragOver : undefined}\r\n      onDrop={isEditing ? dropGameOnGame : undefined}\r\n      onDelete={deleteGame}\r\n    />\r\n  ));\r\n\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <Toolbar userId={props.id} profilePic={props.profilePic} />\r\n      <div className=\"user-page-header mb-3\">\r\n        <img\r\n          src={props.profilePic}\r\n          alt={`${props.displayName}'s profile picture`}\r\n          className=\"page-profile-pic rounded-circle\"\r\n        />\r\n        <h1 className=\"display-1 d-inline\">{props.displayName}</h1>\r\n      </div>\r\n      <div className={`user-page-main ${isEditing && \"d-flex\"}`}>\r\n        <div\r\n          className={`user-page-games rounded-lg d-flex flex-column ${\r\n            isEditing ? \"is-editing\" : \"m-auto\"\r\n          }`}\r\n        >\r\n          <div\r\n            className=\"favorite-games-list game-list\"\r\n            onDrop={dropGameOnContainer}\r\n            onDragOver={isEditing ? dragOver : undefined}\r\n          >\r\n            {favoriteGamesList}\r\n          </div>\r\n          <div className=\"button-bar\">\r\n            {props.id &&\r\n              (!isEditing ? (\r\n                <button\r\n                  onClick={() => setIsEditing(true)}\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Edit\r\n                </button>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={rollbackChanges}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button onClick={saveChanges} className=\"btn btn-primary\">\r\n                    Save\r\n                  </button>\r\n                </>\r\n              ))}\r\n            <span className=\"danger-text\">{errorMessage}</span>\r\n          </div>\r\n        </div>\r\n        {isEditing && <GameSearchBox />}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getServerSideProps(context) {\r\n  return {\r\n    props: JSON.parse(JSON.stringify(context.res.locals)),\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}