{"ast":null,"code":"import React, { useState, useRef, useEffect } from \"react\";\n/**\r\n *\r\n * A component representing a single game\r\n *\r\n * @param {object} props :\r\n *\r\n *  - data-index? {string}: index of game in the fave game list\r\n *\r\n *  - onAdd? {function}: callback for games in GameSearchBox to be added to favorite games list.\r\n *  Used in mobile view. Mandatory for Games in GameSearchBox.\r\n *\r\n *  - changePosition? {function(currPos: int, nextPos: int)}: callback for games in fave game list to change position.\r\n * Used in mobile view. Mandatory for Games in fave game list.\r\n */\n\nexport default function Game(props) {\n  //I cast it to number so often maybe I should just save it hm\n  var dataIndex = props[\"data-index\"] && Number(props[\"data-index\"]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-container container rounded my-3 \",\n    \"data-index\": props[\"data-index\"],\n    onDragStart: props.onDragStart,\n    onDragOver: props.onDragOver,\n    onDrop: props.onDrop,\n    draggable: props.draggable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-md-1 col-1 \".concat(props[\"data-index\"] && \"pos-\".concat(dataIndex + 1))\n  }, props[\"data-index\"] && dataIndex + 1 + \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-img col-md-2 \".concat(props.isEditing ? \"col-10\" : \"col-11\")\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.gameCoverUrl,\n    alt: \"Cover art for \".concat(props.gameName),\n    height: 90,\n    width: 90,\n    className: \"rounded d-inline-block m-auto\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"change-pos-buttons d-md-none \".concat(props.isEditing ? \"col-1\" : \"d-none\")\n  }, dataIndex > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary change-pos-up\",\n    onClick: function onClick() {\n      return props.changePosition(dataIndex, dataIndex - 1);\n    }\n  }, \"^\"), !props.isLast && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary change-pos-down\",\n    onClick: function onClick() {\n      return props.changePosition(dataIndex, dataIndex + 1);\n    }\n  }, \"v\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-name d-inline-block \".concat(props.isEditing ? \"col-md-6\" : \"col-md-9\")\n  }, /*#__PURE__*/React.createElement(\"p\", null, props.gameName)), props.isEditing && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return props.onDelete(props.gameId);\n    },\n    className: \"col-md-3 btn btn-danger\"\n  }, \"Delete\"), //add button should only appear on games in GameSearchBox\n  //data-index prop is only given to games in the favorite game list\n  //therefore if no data-index, its a GameSearchBox game\n  !props[\"data-index\"] && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onAdd,\n    className: \"btn btn-success d-md-none\"\n  }, \"Add\")));\n}\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/Game.js"],"names":["React","useState","useRef","useEffect","Game","props","dataIndex","Number","onDragStart","onDragOver","onDrop","draggable","isEditing","gameCoverUrl","gameName","changePosition","isLast","onDelete","gameId","onAdd"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC;AACA,MAAMC,SAAS,GAAGD,KAAK,CAAC,YAAD,CAAL,IAAuBE,MAAM,CAACF,KAAK,CAAC,YAAD,CAAN,CAA/C;AACA,sBACE;AACE,IAAA,SAAS,EAAC,wCADZ;AAEE,kBAAYA,KAAK,CAAC,YAAD,CAFnB;AAGE,IAAA,WAAW,EAAEA,KAAK,CAACG,WAHrB;AAIE,IAAA,UAAU,EAAEH,KAAK,CAACI,UAJpB;AAKE,IAAA,MAAM,EAAEJ,KAAK,CAACK,MALhB;AAME,IAAA,SAAS,EAAEL,KAAK,CAACM;AANnB,kBAQE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AACE,IAAA,SAAS,2BACPN,KAAK,CAAC,YAAD,CAAL,kBAA8BC,SAAS,GAAG,CAA1C,CADO;AADX,KAKGD,KAAK,CAAC,YAAD,CAAL,IAAuBC,SAAS,GAAG,CAAZ,GAAgB,GAL1C,CADF,eAQE;AACE,IAAA,SAAS,8BACPD,KAAK,CAACO,SAAN,GAAkB,QAAlB,GAA6B,QADtB;AADX,kBAKE;AACE,IAAA,GAAG,EAAEP,KAAK,CAACQ,YADb;AAEE,IAAA,GAAG,0BAAmBR,KAAK,CAACS,QAAzB,CAFL;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,KAAK,EAAE,EAJT;AAKE,IAAA,SAAS,EAAC;AALZ,IALF,CARF,eAqBE;AACE,IAAA,SAAS,yCACPT,KAAK,CAACO,SAAN,GAAkB,OAAlB,GAA4B,QADrB;AADX,KAKGN,SAAS,GAAG,CAAZ,iBACC;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,KAAK,CAACU,cAAN,CAAqBT,SAArB,EAAgCA,SAAS,GAAG,CAA5C,CAAN;AAAA;AAFX,SANJ,EAaG,CAACD,KAAK,CAACW,MAAP,iBACC;AACE,IAAA,SAAS,EAAC,mCADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMX,KAAK,CAACU,cAAN,CAAqBT,SAArB,EAAgCA,SAAS,GAAG,CAA5C,CAAN;AAAA;AAFX,SAdJ,CArBF,eA2CE;AACE,IAAA,SAAS,qCACPD,KAAK,CAACO,SAAN,GAAkB,UAAlB,GAA+B,UADxB;AADX,kBAKE,+BAAIP,KAAK,CAACS,QAAV,CALF,CA3CF,EAmDGT,KAAK,CAACO,SAAN,iBACC;AACE,IAAA,OAAO,EAAE;AAAA,aAAMP,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAACa,MAArB,CAAN;AAAA,KADX;AAEE,IAAA,SAAS,EAAC;AAFZ,cApDJ,EA6DI;AACA;AACA;AACA,GAACb,KAAK,CAAC,YAAD,CAAN,iBACE;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACc,KAAvB;AAA8B,IAAA,SAAS,EAAC;AAAxC,WAjEN,CARF,CADF;AAkFD;KArFuBf,I","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n/**\r\n *\r\n * A component representing a single game\r\n *\r\n * @param {object} props :\r\n *\r\n *  - data-index? {string}: index of game in the fave game list\r\n *\r\n *  - onAdd? {function}: callback for games in GameSearchBox to be added to favorite games list.\r\n *  Used in mobile view. Mandatory for Games in GameSearchBox.\r\n *\r\n *  - changePosition? {function(currPos: int, nextPos: int)}: callback for games in fave game list to change position.\r\n * Used in mobile view. Mandatory for Games in fave game list.\r\n */\r\n\r\nexport default function Game(props) {\r\n  //I cast it to number so often maybe I should just save it hm\r\n  const dataIndex = props[\"data-index\"] && Number(props[\"data-index\"]);\r\n  return (\r\n    <div\r\n      className=\"game-container container rounded my-3 \"\r\n      data-index={props[\"data-index\"]}\r\n      onDragStart={props.onDragStart}\r\n      onDragOver={props.onDragOver}\r\n      onDrop={props.onDrop}\r\n      draggable={props.draggable}\r\n    >\r\n      <div className=\"row\">\r\n        <p\r\n          className={`col-md-1 col-1 ${\r\n            props[\"data-index\"] && `pos-${dataIndex + 1}`\r\n          }`}\r\n        >\r\n          {props[\"data-index\"] && dataIndex + 1 + \".\"}\r\n        </p>\r\n        <div\r\n          className={`game-img col-md-2 ${\r\n            props.isEditing ? \"col-10\" : \"col-11\"\r\n          }`}\r\n        >\r\n          <img\r\n            src={props.gameCoverUrl}\r\n            alt={`Cover art for ${props.gameName}`}\r\n            height={90}\r\n            width={90}\r\n            className=\"rounded d-inline-block m-auto\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`change-pos-buttons d-md-none ${\r\n            props.isEditing ? \"col-1\" : \"d-none\"\r\n          }`}\r\n        >\r\n          {dataIndex > 0 && (\r\n            <button\r\n              className=\"btn btn-secondary change-pos-up\"\r\n              onClick={() => props.changePosition(dataIndex, dataIndex - 1)}\r\n            >\r\n              ^\r\n            </button>\r\n          )}\r\n          {!props.isLast && (\r\n            <button\r\n              className=\"btn btn-secondary change-pos-down\"\r\n              onClick={() => props.changePosition(dataIndex, dataIndex + 1)}\r\n            >\r\n              v\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={`game-name d-inline-block ${\r\n            props.isEditing ? \"col-md-6\" : \"col-md-9\"\r\n          }`}\r\n        >\r\n          <p>{props.gameName}</p>\r\n        </div>\r\n\r\n        {props.isEditing && (\r\n          <button\r\n            onClick={() => props.onDelete(props.gameId)}\r\n            className=\"col-md-3 btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n\r\n        {\r\n          //add button should only appear on games in GameSearchBox\r\n          //data-index prop is only given to games in the favorite game list\r\n          //therefore if no data-index, its a GameSearchBox game\r\n          !props[\"data-index\"] && (\r\n            <button onClick={props.onAdd} className=\"btn btn-success d-md-none\">\r\n              Add\r\n            </button>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}