{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport { TextField } from \"./FormFields\";\nimport Test from \"./Test\";\nexport default function Toolbar(props) {\n  _s2();\n\n  var _useState = useState(\"Initial\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  function f(e, errorInfo) {\n    return;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(Form, {\n    id: \"Toolbar-Form\",\n    onSubmit: f,\n    submitBtnText: \"Search\",\n    method: \"get\",\n    action: \"/search\"\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Search\",\n    name: \"Search\",\n    value: \"\"\n  })), /*#__PURE__*/React.createElement(\"h1\", null, text)));\n}\n\n_s2(Toolbar, \"DLXSstbUuC73oX25tpBwCKHVZeA=\");\n\n_c = Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/Toolbar.js"],"names":["React","useState","Form","TextField","Test","Toolbar","props","text","setText","f","e","errorInfo"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAA,kBACbL,QAAQ,CAAC,SAAD,CADK;AAAA;AAAA,MAC9BM,IAD8B;AAAA,MACxBC,OADwB;;AAGrC,WAASC,CAAT,CAAWC,CAAX,EAAcC,SAAd,EAAyB;AACvB;AACD;;AACD,sBACE,8CACE,+CACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,QAAQ,EAAEF,CAFZ;AAGE,IAAA,aAAa,EAAC,QAHhB;AAIE,IAAA,MAAM,EAAC,KAJT;AAKE,IAAA,MAAM,EAAC;AALT,kBAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAC;AAA9C,IAPF,CADF,eAUE,gCAAKF,IAAL,CAVF,CADF,CADF;AAgBD;;IAtBuBF,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport { TextField } from \"./FormFields\";\r\nimport Test from \"./Test\";\r\n\r\nexport default function Toolbar(props) {\r\n  const [text, setText] = useState(\"Initial\");\r\n\r\n  function f(e, errorInfo) {\r\n    return;\r\n  }\r\n  return (\r\n    <div>\r\n      <span>\r\n        <Form\r\n          id=\"Toolbar-Form\"\r\n          onSubmit={f}\r\n          submitBtnText=\"Search\"\r\n          method=\"get\"\r\n          action=\"/search\"\r\n        >\r\n          <TextField label=\"Search\" name=\"Search\" value=\"\" />\r\n        </Form>\r\n        <h1>{text}</h1>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}