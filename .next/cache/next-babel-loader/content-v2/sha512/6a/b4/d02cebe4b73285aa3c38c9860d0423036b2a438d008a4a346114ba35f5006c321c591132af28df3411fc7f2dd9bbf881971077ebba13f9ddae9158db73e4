{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adnan\\\\web-dev\\\\my-game-page\\\\components\\\\GameSearchBox.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Game from \"./Game\";\nexport default function GameSearchBox(props) {\n  _s();\n\n  var _this = this;\n\n  //search term in search bar\n  var _useState = useState(\"\"),\n      searchTerm = _useState[0],\n      setSearchTerm = _useState[1]; //page of search results\n\n\n  var _useState2 = useState(undefined),\n      searchPage = _useState2[0],\n      setSearchPage = _useState2[1]; //list of objects that will be retrieved from search api\n\n\n  var _useState3 = useState([]),\n      searchResults = _useState3[0],\n      setSearchResults = _useState3[1];\n\n  var _useState4 = useState(false),\n      startSearch = _useState4[0],\n      setStartSearch = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1]; //used to determine whether its first render or not\n\n\n  var firstRender = useRef(true);\n\n  function startDragGame(e, game) {\n    e.stopPropagation();\n    e.dataTransfer.setData(\"application/json\", JSON.stringify(game));\n  } //dragover handler is needed to make element\n  //draggable\n\n\n  function dragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n\n  var displayedSearchResults = searchResults.map(function (game) {\n    return /*#__PURE__*/_jsxDEV(Game, {\n      gameId: game.id,\n      gameName: game.name,\n      gameCoverUrl: game.coverurl,\n      draggable: true,\n      onDragStart: function onDragStart(e) {\n        return startDragGame(e, game);\n      },\n      onDragOver: dragOver\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this);\n  });\n\n  function handleChange(e) {\n    setSearchTerm(e.target.value);\n  }\n\n  function handleSearch(e) {\n    e.preventDefault();\n    if (searchTerm === \"\") return;\n    setPageNumber(0);\n  }\n\n  function setPageNumber(pageNumber) {\n    if (pageNumber < 0) return;\n    setSearchPage(pageNumber);\n    setStartSearch(true);\n  }\n\n  function fetchAndPopulateSearchResults() {\n    return _fetchAndPopulateSearchResults.apply(this, arguments);\n  } //whenever page number changes, new search results are fetched\n  //needs to be done in useEffect because useState doesnt change\n  //values immediately, accessing searchPage after render ensures\n  //we have new value\n\n\n  function _fetchAndPopulateSearchResults() {\n    _fetchAndPopulateSearchResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var query, response, results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              query = \"http://localhost:3000/api/search/\".concat(searchTerm, \"/\").concat(searchPage);\n              _context.next = 4;\n              return fetch(query);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              results = _context.sent;\n              setSearchResults(results);\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchAndPopulateSearchResults.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    //dont want fetchAndPopulateSearchResults() being\n    //called on first render\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    console.log(\"in effect : \".concat(startSearch));\n    fetchAndPopulateSearchResults();\n  }, [startSearch]);\n  setStartSearch(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"game-search-bar\",\n          children: \"Name of Game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"game-search-bar\",\n          value: searchTerm,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), searchPage >= 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return setPageNumber(searchPage - 1);\n            },\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"page-number\",\n            children: \"Page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"page-number\",\n            disabled: true,\n            value: searchPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return setPageNumber(searchPage + 1);\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), displayedSearchResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameSearchBox, \"ejnx0GmuCJ3SWGT6kt+4zk0rNTI=\");\n\n_c = GameSearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameSearchBox\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/GameSearchBox.js"],"names":["useState","useEffect","useRef","Game","GameSearchBox","props","searchTerm","setSearchTerm","undefined","searchPage","setSearchPage","searchResults","setSearchResults","startSearch","setStartSearch","loading","setLoading","firstRender","startDragGame","e","game","stopPropagation","dataTransfer","setData","JSON","stringify","dragOver","preventDefault","dropEffect","displayedSearchResults","map","id","name","coverurl","handleChange","target","value","handleSearch","setPageNumber","pageNumber","fetchAndPopulateSearchResults","query","fetch","response","json","results","current","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nexport default function GameSearchBox(props) {\r\n  //search term in search bar\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  //page of search results\r\n  const [searchPage, setSearchPage] = useState(undefined);\r\n  //list of objects that will be retrieved from search api\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [startSearch, setStartSearch] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //used to determine whether its first render or not\r\n  const firstRender = useRef(true);\r\n\r\n  function startDragGame(e, game) {\r\n    e.stopPropagation();\r\n    e.dataTransfer.setData(\"application/json\", JSON.stringify(game));\r\n  }\r\n\r\n  //dragover handler is needed to make element\r\n  //draggable\r\n  function dragOver(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n  }\r\n\r\n  const displayedSearchResults = searchResults.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      gameId={game.id}\r\n      gameName={game.name}\r\n      gameCoverUrl={game.coverurl}\r\n      draggable={true}\r\n      onDragStart={(e) => startDragGame(e, game)}\r\n      onDragOver={dragOver}\r\n    />\r\n  ));\r\n\r\n  function handleChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    if (searchTerm === \"\") return;\r\n    setPageNumber(0);\r\n  }\r\n\r\n  function setPageNumber(pageNumber) {\r\n    if (pageNumber < 0) return;\r\n    setSearchPage(pageNumber);\r\n    setStartSearch(true);\r\n  }\r\n\r\n  async function fetchAndPopulateSearchResults() {\r\n    setLoading(true);\r\n    const query = `http://localhost:3000/api/search/${searchTerm}/${searchPage}`;\r\n    const response = await fetch(query);\r\n    const results = await response.json();\r\n    setSearchResults(results);\r\n    setLoading(false);\r\n  }\r\n\r\n  //whenever page number changes, new search results are fetched\r\n  //needs to be done in useEffect because useState doesnt change\r\n  //values immediately, accessing searchPage after render ensures\r\n  //we have new value\r\n  useEffect(() => {\r\n    //dont want fetchAndPopulateSearchResults() being\r\n    //called on first render\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n    console.log(`in effect : ${startSearch}`);\r\n    fetchAndPopulateSearchResults();\r\n  }, [startSearch]);\r\n\r\n  setStartSearch(false);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleSearch}>\r\n          <label htmlFor=\"game-search-bar\">Name of Game:</label>\r\n          <input\r\n            id=\"game-search-bar\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n          ></input>\r\n          <button type=\"submit\">Search</button>\r\n          {searchPage >= 0 && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setPageNumber(searchPage - 1)}\r\n              >\r\n                Prev\r\n              </button>\r\n              <label htmlFor=\"page-number\">Page:</label>\r\n              <input\r\n                id=\"page-number\"\r\n                disabled={true}\r\n                value={searchPage}\r\n              ></input>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setPageNumber(searchPage + 1)}\r\n              >\r\n                Next\r\n              </button>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        {loading && <p>Loading...</p>}\r\n        {displayedSearchResults}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}