{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adnan\\\\web-dev\\\\my-game-page\\\\components\\\\GameSearchBox.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Game from \"./Game\";\nexport default function GameSearchBox(props) {\n  const {\n    0: searchTerm,\n    1: setSearchTerm\n  } = useState(\"\");\n  const {\n    0: searchPage,\n    1: setSearchPage\n  } = useState(undefined);\n  const {\n    0: searchResults,\n    1: setSearchResults\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const firstRender = useRef(true);\n  const displayedSearchResults = searchResults.map(game => /*#__PURE__*/_jsxDEV(Game, {\n    gameId: game.id,\n    gameName: game.name,\n    gameCoverUrl: game.coverurl\n  }, game.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n\n  function handleChange(e) {\n    setSearchTerm(e.target.value);\n  }\n\n  function handleSearch(e) {\n    e.preventDefault(); //console.log(\"search being handled\");\n\n    setPageNumber(0); //fetchAndPopulateSearchResults();\n  }\n\n  function setPageNumber(pageNumber) {\n    //console.log(`setpagenumber, pagenumber is: ${pageNumber}`);\n    if (pageNumber < 0) return;\n    setSearchPage(pageNumber);\n    console.log(\"page number set\"); //fetchAndPopulateSearchResults();\n  }\n\n  async function fetchAndPopulateSearchResults() {\n    function fetch(s) {\n      return {\n        a: \"DUMB\"\n      };\n    }\n\n    console.log(`fetching. searchpage is ${searchPage}`);\n    setLoading(true);\n    const query = `http://localhost:3000/api/search/${searchTerm}/${searchPage}`;\n    const response = await fetch(query);\n    const results = await response.json();\n    setSearchResults(results);\n    console.log(query);\n    console.log(results);\n    console.log(\"----------\");\n    setLoading(false);\n  } //whenever page number changes, new search results are fetched\n  //needs to be done in useEffect because useState doesnt change\n  //values immediately, accessing searchPage after render ensures\n  //we have new value\n\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    fetchAndPopulateSearchResults();\n  }, [searchPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"game-search-bar\",\n          children: \"Name of Game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"game-search-bar\",\n          value: searchTerm,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), searchPage >= 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setPageNumber(searchPage - 1),\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"page-number\",\n            children: \"Page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"page-number\",\n            disabled: true,\n            value: searchPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setPageNumber(searchPage + 1),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), displayedSearchResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/GameSearchBox.js"],"names":["useState","useEffect","useRef","Game","GameSearchBox","props","searchTerm","setSearchTerm","searchPage","setSearchPage","undefined","searchResults","setSearchResults","loading","setLoading","firstRender","displayedSearchResults","map","game","id","name","coverurl","handleChange","e","target","value","handleSearch","preventDefault","setPageNumber","pageNumber","console","log","fetchAndPopulateSearchResults","fetch","s","a","query","response","results","json","current"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nexport default function GameSearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchPage, setSearchPage] = useState(undefined);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const firstRender = useRef(true);\r\n\r\n  const displayedSearchResults = searchResults.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      gameId={game.id}\r\n      gameName={game.name}\r\n      gameCoverUrl={game.coverurl}\r\n    />\r\n  ));\r\n\r\n  function handleChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    //console.log(\"search being handled\");\r\n    setPageNumber(0);\r\n    //fetchAndPopulateSearchResults();\r\n  }\r\n\r\n  function setPageNumber(pageNumber) {\r\n    //console.log(`setpagenumber, pagenumber is: ${pageNumber}`);\r\n    if (pageNumber < 0) return;\r\n\r\n    setSearchPage(pageNumber);\r\n    console.log(\"page number set\");\r\n    //fetchAndPopulateSearchResults();\r\n  }\r\n\r\n  async function fetchAndPopulateSearchResults() {\r\n    function fetch(s) {\r\n      return { a: \"DUMB\" };\r\n    }\r\n    console.log(`fetching. searchpage is ${searchPage}`);\r\n    setLoading(true);\r\n    const query = `http://localhost:3000/api/search/${searchTerm}/${searchPage}`;\r\n    const response = await fetch(query);\r\n    const results = await response.json();\r\n    setSearchResults(results);\r\n    console.log(query);\r\n    console.log(results);\r\n    console.log(\"----------\");\r\n    setLoading(false);\r\n  }\r\n\r\n  //whenever page number changes, new search results are fetched\r\n  //needs to be done in useEffect because useState doesnt change\r\n  //values immediately, accessing searchPage after render ensures\r\n  //we have new value\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n    fetchAndPopulateSearchResults();\r\n  }, [searchPage]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleSearch}>\r\n          <label htmlFor=\"game-search-bar\">Name of Game:</label>\r\n          <input\r\n            id=\"game-search-bar\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n          ></input>\r\n          <button type=\"submit\">Search</button>\r\n          {searchPage >= 0 && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setPageNumber(searchPage - 1)}\r\n              >\r\n                Prev\r\n              </button>\r\n              <label htmlFor=\"page-number\">Page:</label>\r\n              <input\r\n                id=\"page-number\"\r\n                disabled={true}\r\n                value={searchPage}\r\n              ></input>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setPageNumber(searchPage + 1)}\r\n              >\r\n                Next\r\n              </button>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        {loading && <p>Loading...</p>}\r\n        {displayedSearchResults}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}