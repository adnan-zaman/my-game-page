{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adnan\\\\web-dev\\\\my-game-page\\\\components\\\\GameSearchBox.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Game from \"./Game\";\nexport default function GameSearchBox(props) {\n  _s();\n\n  var _this = this;\n\n  //search term in search bar\n  var _useState = useState(\"\"),\n      displayedSearchTerm = _useState[0],\n      setDisplayedSearchTerm = _useState[1]; //the actual underlying search term regardless of whats typed\n  //clicking next/prev will change pages for this value\n  //clicking search button will change this value\n\n\n  var _useState2 = useState(displayedSearchTerm),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1]; //page of search results\n\n\n  var _useState3 = useState(undefined),\n      searchPage = _useState3[0],\n      setSearchPage = _useState3[1]; //list of objects that will be retrieved from search api\n\n\n  var _useState4 = useState([]),\n      searchResults = _useState4[0],\n      setSearchResults = _useState4[1]; //whether or not search results are currently loading\n\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1]; //error message\n\n\n  var _useState6 = useState(\"\"),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1]; //whether or not there is a next page of search results\n\n\n  var _useState7 = useState(true),\n      hasNext = _useState7[0],\n      setHasNext = _useState7[1]; //used to determine whether its first render or not\n\n\n  var firstRender = useRef(true);\n\n  function startDragGame(e, game) {\n    e.stopPropagation();\n    e.dataTransfer.setData(\"application/json\", JSON.stringify(game));\n  } //dragover handler is needed to make element\n  //draggable\n\n\n  function dragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n\n  var displayedSearchResults = searchResults.map(function (game) {\n    return /*#__PURE__*/_jsxDEV(Game, {\n      gameId: game.id,\n      gameName: game.name,\n      gameCoverUrl: game.coverurl,\n      draggable: true,\n      onDragStart: function onDragStart(e) {\n        return startDragGame(e, game);\n      },\n      onDragOver: dragOver\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, _this);\n  });\n  /**\r\n   * Updates displayed search term\r\n   * @param {Event} e\r\n   */\n\n  function handleChange(e) {\n    setDisplayedSearchTerm(e.target.value);\n  }\n  /**\r\n   * Sets searchTerm to displayedSearchTerm\r\n   * and fetches search results.\r\n   *\r\n   * @param {Event} e\r\n   */\n\n\n  function handleSearch(e) {\n    e.preventDefault();\n    if (displayedSearchTerm === \"\") return;\n    setSearchTerm(displayedSearchTerm);\n    setSearchPage(0);\n    fetchAndPopulateSearchResults(displayedSearchTerm, 0);\n  }\n  /**\r\n   * Changes page number for searchTerm\r\n   * (not displayedSearchTerm) and fetches search\r\n   * results.\r\n   *\r\n   * @param {number} pageNumber new page number\r\n   */\n\n\n  function changePage(pageNumber) {\n    if (pageNumber < 0) return;\n    setSearchPage(pageNumber);\n    fetchAndPopulateSearchResults(searchTerm, pageNumber);\n  }\n  /**\r\n   * Fetches a search from the API and populates page\r\n   * with search results. This function needs to be called\r\n   * with a search term and page manually instead of relying on\r\n   * checking state as reading state immediately after setting it\r\n   * will return stale values. So, we give it the fresh values manually.\r\n   *\r\n   * @param {string} term search term\r\n   * @param {number} page search page number\r\n   */\n\n\n  function fetchAndPopulateSearchResults(_x, _x2) {\n    return _fetchAndPopulateSearchResults.apply(this, arguments);\n  }\n\n  function _fetchAndPopulateSearchResults() {\n    _fetchAndPopulateSearchResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(term, page) {\n      var query, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setErrorMessage(\"\");\n              setLoading(true);\n              query = \"http://localhost:3000/api/search/\".concat(term, \"/\").concat(page);\n              _context.next = 5;\n              return fetch(query);\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              data = _context.sent;\n\n              if (response.ok) {\n                setSearchResults(data.results);\n                setHasNext(data.hasNext);\n              } else {\n                setErrorMessage(results.message);\n              }\n\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchAndPopulateSearchResults.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"game-search-bar\",\n          children: \"Name of Game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"game-search-bar\",\n          value: displayedSearchTerm,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), searchPage >= 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [searchPage > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return changePage(searchPage - 1);\n            },\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"page-number\",\n            children: \"Page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"page-number\",\n            disabled: true,\n            value: searchPage + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), hasNext && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return changePage(searchPage + 1);\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 26\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), displayedSearchResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameSearchBox, \"XFnGOqU1uwGJSeu65AEijNx22RI=\");\n\n_c = GameSearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameSearchBox\");","map":{"version":3,"sources":["C:/Users/adnan/web-dev/my-game-page/components/GameSearchBox.js"],"names":["useState","useEffect","useRef","Game","GameSearchBox","props","displayedSearchTerm","setDisplayedSearchTerm","searchTerm","setSearchTerm","undefined","searchPage","setSearchPage","searchResults","setSearchResults","loading","setLoading","errorMessage","setErrorMessage","hasNext","setHasNext","firstRender","startDragGame","e","game","stopPropagation","dataTransfer","setData","JSON","stringify","dragOver","preventDefault","dropEffect","displayedSearchResults","map","id","name","coverurl","handleChange","target","value","handleSearch","fetchAndPopulateSearchResults","changePage","pageNumber","term","page","query","fetch","response","json","data","ok","results","message"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nexport default function GameSearchBox(props) {\r\n  //search term in search bar\r\n  const [displayedSearchTerm, setDisplayedSearchTerm] = useState(\"\");\r\n  //the actual underlying search term regardless of whats typed\r\n  //clicking next/prev will change pages for this value\r\n  //clicking search button will change this value\r\n  const [searchTerm, setSearchTerm] = useState(displayedSearchTerm);\r\n  //page of search results\r\n  const [searchPage, setSearchPage] = useState(undefined);\r\n  //list of objects that will be retrieved from search api\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  //whether or not search results are currently loading\r\n  const [loading, setLoading] = useState(false);\r\n  //error message\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  //whether or not there is a next page of search results\r\n  const [hasNext, setHasNext] = useState(true);\r\n\r\n  //used to determine whether its first render or not\r\n  const firstRender = useRef(true);\r\n\r\n  function startDragGame(e, game) {\r\n    e.stopPropagation();\r\n    e.dataTransfer.setData(\"application/json\", JSON.stringify(game));\r\n  }\r\n\r\n  //dragover handler is needed to make element\r\n  //draggable\r\n  function dragOver(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n  }\r\n\r\n  const displayedSearchResults = searchResults.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      gameId={game.id}\r\n      gameName={game.name}\r\n      gameCoverUrl={game.coverurl}\r\n      draggable={true}\r\n      onDragStart={(e) => startDragGame(e, game)}\r\n      onDragOver={dragOver}\r\n    />\r\n  ));\r\n\r\n  /**\r\n   * Updates displayed search term\r\n   * @param {Event} e\r\n   */\r\n  function handleChange(e) {\r\n    setDisplayedSearchTerm(e.target.value);\r\n  }\r\n\r\n  /**\r\n   * Sets searchTerm to displayedSearchTerm\r\n   * and fetches search results.\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    if (displayedSearchTerm === \"\") return;\r\n    setSearchTerm(displayedSearchTerm);\r\n    setSearchPage(0);\r\n    fetchAndPopulateSearchResults(displayedSearchTerm, 0);\r\n  }\r\n\r\n  /**\r\n   * Changes page number for searchTerm\r\n   * (not displayedSearchTerm) and fetches search\r\n   * results.\r\n   *\r\n   * @param {number} pageNumber new page number\r\n   */\r\n  function changePage(pageNumber) {\r\n    if (pageNumber < 0) return;\r\n    setSearchPage(pageNumber);\r\n    fetchAndPopulateSearchResults(searchTerm, pageNumber);\r\n  }\r\n\r\n  /**\r\n   * Fetches a search from the API and populates page\r\n   * with search results. This function needs to be called\r\n   * with a search term and page manually instead of relying on\r\n   * checking state as reading state immediately after setting it\r\n   * will return stale values. So, we give it the fresh values manually.\r\n   *\r\n   * @param {string} term search term\r\n   * @param {number} page search page number\r\n   */\r\n  async function fetchAndPopulateSearchResults(term, page) {\r\n    setErrorMessage(\"\");\r\n    setLoading(true);\r\n    const query = `http://localhost:3000/api/search/${term}/${page}`;\r\n    const response = await fetch(query);\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      setSearchResults(data.results);\r\n      setHasNext(data.hasNext);\r\n    } else {\r\n      setErrorMessage(results.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleSearch}>\r\n          <label htmlFor=\"game-search-bar\">Name of Game:</label>\r\n          <input\r\n            id=\"game-search-bar\"\r\n            value={displayedSearchTerm}\r\n            onChange={handleChange}\r\n          ></input>\r\n          <button type=\"submit\">Search</button>\r\n          {searchPage >= 0 && (\r\n            <>\r\n              {searchPage > 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => changePage(searchPage - 1)}\r\n                >\r\n                  Prev\r\n                </button>\r\n              )}\r\n              <label htmlFor=\"page-number\">Page:</label>\r\n              <input\r\n                id=\"page-number\"\r\n                disabled={true}\r\n                value={searchPage + 1}\r\n              ></input>\r\n              {hasNext && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => changePage(searchPage + 1)}\r\n                >\r\n                  Next\r\n                </button>\r\n              )}\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        {errorMessage && <p>{errorMessage}</p>}\r\n        {loading && <p>Loading...</p>}\r\n        {displayedSearchResults}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}